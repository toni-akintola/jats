import { SentimentSource, SentimentResult, Mention } from "../types";
import { generateMentionText } from "../sentiment-service";

export const redditSource: SentimentSource = {
  name: "Reddit",
  async fetchSentiment(location: string): Promise<SentimentResult> {
    // Generate random sentiment data
    const mentionCount = Math.floor(Math.random() * 15) + 5; // 5-20 mentions
    const mentions: Mention[] = [];
    const baseScore = Math.random() * 2 - 1; // Base sentiment between -1 and 1

    for (let i = 0; i < mentionCount; i++) {
      const sentiment = baseScore + (Math.random() * 0.8 - 0.4); // Add more variation for Reddit
      const daysAgo = Math.floor(Math.random() * 30); // Random date within last month
      const date = new Date();
      date.setDate(date.getDate() - daysAgo);
      
      const postId = Math.random().toString(36).substr(2, 6);
      const subreddit = ['citydiscussion', 'urbanliving', 'localcommunity'][Math.floor(Math.random() * 3)];
      
      mentions.push({
        text: generateMentionText(location, sentiment, "Reddit"),
        sentiment,
        source: "Reddit",
        date: date.toISOString(),
        url: `https://reddit.com/r/${subreddit}/comments/${postId}`,
      });
    }

    // Calculate average sentiment
    const averageSentiment = mentions.reduce((sum, m) => sum + m.sentiment, 0) / mentions.length;

    return {
      mentions,
      score: averageSentiment,
      keywords: [], // Keywords will be generated by the main service
    };
  },
};
